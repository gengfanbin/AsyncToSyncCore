/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface ExecResult {
  code: number
  result: string
  message: string
}
/**
 * create a handler
 * # Examples
 * ```
 * let handler = create_handler("console.log('hello world')");
 * ```
 */
export function createHandler(code: string): ExecResult
/**
 * execute a handler
 * # Examples
 * ```
 * let result = exec_handler("handler_uuid", "arg1, arg2");
 * ```
 * # Arguments
 * * `uuid` - the uuid of the handler
 * * `args` - the arguments to pass to the handler, Receive a string type parameter.
 * return ExecResult
 * * `code` - the code of the result
 * * `result` -  Execute JS code and wait for the return result. The return value of this JavaScript code must be able to be formatted with JSON
 * * `message` - the message of the result
 */
export function execHandler(uuid: string, args: string): ExecResult
/**
 * remove a handler
 * # Examples
 * ```
 * let result = remove_handler("handler_uuid");
 * ```
 */
export function removeHandler(uuid: string): ExecResult
/**
 * Execute JS code and wait for the return result.
 * # Examples
 * ```
 * let result = sync_exec("async function test() { return 'hello world'; }");
 * ```
 * The return value of this JavaScript code must be able to be formatted with JSON
 */
export function syncExec(code: string, args: string): ExecResult
